


# 📊 Wine Quality Prediction using Regression Models  

## 🚀 Project Overview
This project explores **predictive modeling** techniques for wine quality prediction using **various regression algorithms**. The focus is on understanding how different models perform, how to tune their hyperparameters, and how to balance **underfitting** and **overfitting**.

## 📂 Dataset
The project uses the **Wine Quality Dataset**, which contains physicochemical properties of wine samples along with their quality ratings. This is a well-known dataset for regression analysis and can be found [here](https://archive.ics.uci.edu/ml/datasets/Wine+Quality).

---

## 🛠️ Techniques Used
- **K-Nearest Neighbors (KNN) Regression**: Exploring the effect of different values of `K` on model performance.
- **Ordinary Least Squares (OLS) Regression**: A simple baseline linear regression.
- **Ridge Regression**: Applying L2 regularization and tuning the regularization parameter `α`.
- **LASSO Regression**: Applying L1 regularization and tuning the regularization parameter `α`.

---

## 📊 Key Analysis
- **Hyperparameter Tuning**: Selection of optimal `K` (for KNN) and `α` (for Ridge and LASSO) based on cross-validation performance.
- **Model Comparison**: Evaluation of each model's performance using metrics like **Mean Squared Error (MSE)**.
- **Overfitting vs. Underfitting**: Analysis of how model complexity affects generalization to unseen data.
- **Visualization**: Results are summarized using plots and tables for easier interpretation.

---

## 💻 Tools & Libraries
- Python
- scikit-learn
- pandas
- numpy
- matplotlib / seaborn (for plots)

---

## 📈 Results Summary
| Model | Key Finding |
|---|---|
| KNN Regression | Performance depends heavily on `K`. Smaller `K` overfits, larger `K` underfits. |
| OLS Regression | Simple linear model, struggled with complex relationships. |
| Ridge Regression | Balanced bias and variance well at optimal `α`. |
| LASSO Regression | Sparse solution, useful for feature selection at optimal `α`. |

---

## 🧰 Folder Structure
```
.
├── data/                 # Dataset files
├── notebooks/             # Jupyter notebooks for each model
├── reports/                # Final analysis and results
├── src/                    # Python scripts for model training and evaluation
├── README.md               # Project documentation (this file)
```



---

